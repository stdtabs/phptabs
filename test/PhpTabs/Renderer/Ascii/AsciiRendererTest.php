<?php

/*
 * This file is part of the PhpTabs package.
 *
 * Copyright (c) landrok at github.com/landrok
 *
 * For the full copyright and license information, please see
 * <https://github.com/stdtabs/phptabs/blob/master/LICENSE>.
 */

namespace PhpTabsTest\Renderer\Ascii;

use Exception;
use PHPUnit\Framework\TestCase;
use PhpTabs\IOFactory;

/**
 * Tests with a simple tablature
 * Render simple tabs, ASCII formatted
 */
class AsciiRendererTest extends TestCase
{
    protected function setUp() : void
    {
        $this->filename = 'testSimpleTab.gp5';
        $this->tablature = IOFactory::fromFile(
            PHPTABS_TEST_BASEDIR
            . '/samples/'
            . $this->filename
        );
    }

    public static function getScenarios()
    {
        $scenarios = [
        #0 Test track index 1
        [1, [], '


E|-------------------------------------|-0-----------3-----------------------|-------------------------------------|
B|-5-----5-----5-----5-----5-----5-----|-5-----5-----5-----5-----5-----5-----|-5-----5-----5-----5-----5-----5-----|
G|-------------------------------------|-------------5-----------------------|-------------------------------------|
D|-------------------------------------|-------------5-----------------------|-------------------------------------|
A|-------------------------------------|-------------3-----------------------|-------------------------------------|
E|-------------------------------------|-------------3-----------------------|-------------------------------------|


E|-----------------------------------------|
B|-5-----5---------5-----5-----5-----5-----|
G|------------%----------------------------|
D|------------%----------------------------|
A|-----------------------------------------|
E|-----------------------------------------|
'     ],

        #1 Test all tracks
        [null, [], '


E|------------------------|-10-----10-----------------------------------------------------|
B|--------------------X---|-------------13------------------------------------------------|
G|-%-------%------11------|------------------12---12--10------------10----------%---------|
D|-%-------%--------------|-------------------------------12--12--------12--10--%---12----|
A|------------------------|---------------------------------------------------------------|
E|------------------------|---------------------------------------------------------------|


E|------------------------------------------------------------|-----------------------------12---12-------------|
B|--------------10---10----10---10---12---13---14---15---10---|-13---12----10-----10----------------------------|
G|-10--12--12-------------------------------------------------|------------------------%--------------%----%----|
D|------------------------------------------------------------|------------------------%--------------%----%----|
A|------------------------------------------------------------|-------------------------------------------------|
E|------------------------------------------------------------|-------------------------------------------------|






E|-------------------------------------|-0-----------3-----------------------|-------------------------------------|
B|-5-----5-----5-----5-----5-----5-----|-5-----5-----5-----5-----5-----5-----|-5-----5-----5-----5-----5-----5-----|
G|-------------------------------------|-------------5-----------------------|-------------------------------------|
D|-------------------------------------|-------------5-----------------------|-------------------------------------|
A|-------------------------------------|-------------3-----------------------|-------------------------------------|
E|-------------------------------------|-------------3-----------------------|-------------------------------------|


E|-----------------------------------------|
B|-5-----5---------5-----5-----5-----5-----|
G|------------%----------------------------|
D|------------%----------------------------|
A|-----------------------------------------|
E|-----------------------------------------|
'     ],

#2 Test track index 0 + songHeader + TrackHeader
        [0, ['songHeader'  => true, 'trackHeader' => true], '
Title: Testing name
Album: Testing album
Artist: Testing artist
Author: Testing author


Track 1: Guitar
E|------------------------|-10-----10-----------------------------------------------------|
B|--------------------X---|-------------13------------------------------------------------|
G|-%-------%------11------|------------------12---12--10------------10----------%---------|
D|-%-------%--------------|-------------------------------12--12--------12--10--%---12----|
A|------------------------|---------------------------------------------------------------|
E|------------------------|---------------------------------------------------------------|


E|------------------------------------------------------------|-----------------------------12---12-------------|
B|--------------10---10----10---10---12---13---14---15---10---|-13---12----10-----10----------------------------|
G|-10--12--12-------------------------------------------------|------------------------%--------------%----%----|
D|------------------------------------------------------------|------------------------%--------------%----%----|
A|------------------------------------------------------------|-------------------------------------------------|
E|------------------------------------------------------------|-------------------------------------------------|
'],
#3 Test track index 0 + maxLineLength = 500
        [0, ['maxLineLength' => 500], '


E|------------------------|-10-----10-----------------------------------------------------|------------------------------------------------------------|-----------------------------12---12-------------|
B|--------------------X---|-------------13------------------------------------------------|--------------10---10----10---10---12---13---14---15---10---|-13---12----10-----10----------------------------|
G|-%-------%------11------|------------------12---12--10------------10----------%---------|-10--12--12-------------------------------------------------|------------------------%--------------%----%----|
D|-%-------%--------------|-------------------------------12--12--------12--10--%---12----|------------------------------------------------------------|------------------------%--------------%----%----|
A|------------------------|---------------------------------------------------------------|------------------------------------------------------------|-------------------------------------------------|
E|------------------------|---------------------------------------------------------------|------------------------------------------------------------|-------------------------------------------------|
']

        ];

        return $scenarios;
    }

    /**
     * Test ASCII renderers
     *
     * @todo rewrite this test when toAscii and onlyTrack() will be
     *       implemented
     * @dataProvider getScenarios()
     */
    public function testScenarios($trackIndex, $options, $expected)
    {
        $renderer = $this->tablature
            ->getRenderer('ascii')
            ->setOptions($options);

        # Check type
        $this->assertInstanceOf(
            'PhpTabs\\Component\\Renderer\\RendererInterface',
            $renderer
        );

        # Check output
        $lineBreaks = "/\r?\n/"; // take care of newline-encodings
        $expected = preg_replace($lineBreaks, PHP_EOL, $expected);
        $this->assertEquals($expected, $renderer->render($trackIndex));
    }

    /**
     * Test ASCII shortcuts
     *
     * @dataProvider getScenarios()
     */
    public function testShortcut($trackIndex, $options, $expected)
    {
        $tabs = clone $this->tablature;
        if (!is_null($trackIndex)) {
            $tabs = $this->tablature->onlyTrack($trackIndex);
        }
        $content = $tabs->toAscii($options);

        # Check output
        $lineBreaks = "/\r?\n/"; // take care of newline-encodings
        //$expected = preg_replace($lineBreaks, PHP_EOL, $expected);
        $this->assertEquals($expected, $content);
    }

    /**
     * Track index does not exist
     */
    public function testNoTrackException()
    {
        $this->expectException(Exception::class);

        $this
            ->tablature
            ->getRenderer('ascii')
            ->render(10);
    }

    protected function tearDown() : void
    {
        unset($this->tablature);
    }
}
